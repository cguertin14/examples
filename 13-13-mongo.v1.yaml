apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: mongo
  name: mongo
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mongo
  serviceName: mongo
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo
    spec:
      containers:
      - command:
        - mongod
        - --replSet
        - rs0
        image: mongo:3.4.1
        imagePullPolicy: IfNotPresent
        name: mongodb
        ports:
        - containerPort: 27017
          name: web
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          exec:
            command:
              - /usr/bin/mongo
              - --eval
              - db.serverStatus()
          initialDelaySeconds: 10
          timeoutSeconds: 10
      - command:
        - bash
        - /config/init.sh
        image: mongo:3.4.1
        imagePullPolicy: IfNotPresent
        name: init-mongo
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: mongo-init
        name: config
  # updateStrategy:
  #   type: OnDelete
  volumeClaimTemplates:
    - metadata:
        name: database
        annotations:
          volume.alpha.kubernetes.io/storage-class: standard
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi  
status:
  replicas: 0
